@version:4.6

# syslog-ng configuration file.
#
#
options {
    chain_hostnames(no);
    create_dirs (yes);
    dir_perm(0755);
    dns_cache(yes);
    frac-digits(3);
    keep_hostname(yes);
    log_fifo_size(2048);
    log_msg_size(8192);
    perm(0644);
    time_reopen (10);
    use_dns(yes);
    use_fqdn(yes);
};

# Sources
source s_network {
    network(
        transport("udp")
        port(5514)
        flags(no-parse)
    );
};

# Filters
filter f_amass_client {
    host(".*amass-run(.*).amass-net" flags("store-matches"));
};

filter f_amass_engine {
    host("engine.amass-net");
};

filter f_catch_all { 
    not (filter(f_amass_client) or filter(f_amass_engine));
};

# Parsers
parser p_json {
    json-parser(
        marker("@cee: ")
        prefix("log.")
    );
};

parser p_syslog {
    syslog-parser();
};

# Rewrite Rules
rewrite r_client_host {
    set("amass$1.amass-net", value("HOST"));
    set("amass$1", value("HOST2"));
};

# Destinations
destination d_amass_client {
    file("/var/log/amass/clients/$YEAR-$MONTH-$DAY-$HOST2.log" create_dirs(yes)
        template("${ISODATE} ${HOST} [${log.level}] ${log.message} [$(format-welf --scope none log.attrs.* --rekey log.attrs.* --shift-levels 2)]\n\n")
    );
};

destination d_amass_engine {
    file("/var/log/amass/engine/$YEAR-$MONTH-$DAY-amass-engine.log" create_dirs(yes)
        template("${ISODATE} ${HOST} [${log.level}] ${log.message} [$(format-welf --scope none log.attrs.* --rekey log.attrs.* --shift-levels 2)]\n\n")
    );
};

destination d_catch_all {
    file("/var/log/amass/catch_all/$HOST/$YEAR-$MONTH-$DAY-catch-all.log" create_dirs(yes));
};

# Logs
log {
    source(s_network);
    filter(f_amass_client);
    rewrite(r_client_host);
    parser(p_json);
    destination(d_amass_client);
};

log {
    source(s_network);
    filter(f_amass_engine);
    parser(p_json);
    destination(d_amass_engine);
};

log {
    source(s_network);
    parser(p_syslog);
    filter(f_catch_all);
    destination(d_catch_all);
};
