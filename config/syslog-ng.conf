@version:4.6
#@include "scl.conf"

# syslog-ng configuration file.
#
#
options {
    chain_hostnames(no);
    create_dirs (yes);
    dir_perm(0755);
    dns_cache(yes);
    keep_hostname(yes);
    log_fifo_size(2048);
    log_msg_size(8192);
    perm(0644);
    time_reopen (10);
    use_dns(yes);
    use_fqdn(yes);
};

# Sources
source s_network {
    network(
        transport("udp")
        port(5514)
        flags(no-parse)
    );
};

# Filters

filter f_amass_client {
    host("amass.amass-net");
    tags("session");
};

filter f_amass_engine {
    host("engine.amass-net");
};

filter f_catch_all { 
    not (filter(f_amass_client) or filter(f_amass_engine));
};

# Parsers
parser p_json_engine {
    json-parser(
        marker("@cee: ")
        prefix("engine.")
    );
};

parser p_syslog {
    syslog-parser();
};

# Destinations
destination d_amass_client {
    file("/var/log/amass/client/$YEAR-$MONTH-$DAY-amass-client.log" create_dirs(yes)); 
};

destination d_amass_engine {
    file("/var/log/amass/engine/$YEAR-$MONTH-$DAY-amass-engine.log" create_dirs(yes)
        template("${MONTH} ${DAY} ${HOUR}:${MIN}:${SEC} ${TZ} ${HOST} [${engine.level}] $(format-welf --scope nv-pairs --exclude engine.level)\n\n")
    );
};

destination d_catch_all {
    file("/var/log/amass/catch_all/$HOST/$YEAR-$MONTH-$DAY-catch-all.log" create_dirs(yes));
};

# Logs
log {
    source(s_network);
    parser(p_syslog);
    filter(f_amass_client);
    destination(d_amass_client);
};

log {
    source(s_network);
    parser(p_json_engine);
    filter(f_amass_engine);
    destination(d_amass_engine);
};

log {
    source(s_network);
    parser(p_syslog);
    filter(f_catch_all);
    destination(d_catch_all);
};
